package proyecto;

import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SpinnerModel;
import javax.swing.table.TableRowSorter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

public class Menu extends javax.swing.JFrame {
    
    public Menu() {
        initComponents();
        this.file = new Archivo();
        this.file.setFile(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createFieldDialog = new javax.swing.JDialog();
        inputNewName = new javax.swing.JTextField();
        fieldSizeSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        integerChoiceButton = new javax.swing.JRadioButton();
        stringChoiceButton = new javax.swing.JRadioButton();
        doubleChoiceButton = new javax.swing.JRadioButton();
        charChoiceButton = new javax.swing.JRadioButton();
        booleanChoiceButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        keyCheckBox = new javax.swing.JCheckBox();
        createNewFieldButton = new javax.swing.JButton();
        editField = new javax.swing.JPopupMenu();
        Rename = new javax.swing.JMenuItem();
        changeDataType = new javax.swing.JMenu();
        integerEditButton = new javax.swing.JRadioButtonMenuItem();
        stringEditButton = new javax.swing.JRadioButtonMenuItem();
        doubleEditButton = new javax.swing.JRadioButtonMenuItem();
        booleanEditButton = new javax.swing.JRadioButtonMenuItem();
        charEditButton = new javax.swing.JRadioButtonMenuItem();
        isKeyEditButton = new javax.swing.JCheckBoxMenuItem();
        setSize = new javax.swing.JMenuItem();
        Delete = new javax.swing.JMenuItem();
        dataTypeEditBG = new javax.swing.ButtonGroup();
        dataTypeBG = new javax.swing.ButtonGroup();
        treeDialog = new javax.swing.JDialog();
        jScrollPane7 = new javax.swing.JScrollPane();
        TreeTextArea = new javax.swing.JTextArea();
        emptyPane = new javax.swing.JTabbedPane();
        fileTab = new javax.swing.JPanel();
        openFileButton = new javax.swing.JButton();
        saveFileButton = new javax.swing.JButton();
        newFileButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        closeFileButton = new javax.swing.JButton();
        fieldsTab = new javax.swing.JPanel();
        createFieldButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldsTable = new javax.swing.JTable();
        registriesTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        registryTable = new javax.swing.JTable();
        createRegistry = new javax.swing.JButton();
        createRegistry1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        textField1 = new java.awt.TextField();
        createRegistry2 = new javax.swing.JButton();
        indexesTab = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        exportTab = new javax.swing.JPanel();
        exportToCSV = new javax.swing.JButton();
        exportToXML = new javax.swing.JButton();

        createFieldDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        createFieldDialog.setTitle("Crear Campo");
        createFieldDialog.setType(java.awt.Window.Type.POPUP);

        inputNewName.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Nombre del Campo"));
        inputNewName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNewNameActionPerformed(evt);
            }
        });

        fieldSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 256, 1));

        jLabel1.setText("Tamaño del Campo");

        dataTypeBG.add(integerChoiceButton);
        integerChoiceButton.setText("Entero");
        integerChoiceButton.setActionCommand("Entero");

        dataTypeBG.add(stringChoiceButton);
        stringChoiceButton.setText("Cadena/String");
        stringChoiceButton.setActionCommand("Cadena");

        dataTypeBG.add(doubleChoiceButton);
        doubleChoiceButton.setText("Double");
        doubleChoiceButton.setActionCommand("Double");

        dataTypeBG.add(charChoiceButton);
        charChoiceButton.setText("Carácter");
        charChoiceButton.setActionCommand("Carácter");

        dataTypeBG.add(booleanChoiceButton);
        booleanChoiceButton.setText("Booleano");
        booleanChoiceButton.setActionCommand("Booleano");

        jLabel2.setText("Tipo de Dato");

        keyCheckBox.setText("Es llave?");

        createNewFieldButton.setText("Crear Campo");
        createNewFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewFieldButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createFieldDialogLayout = new javax.swing.GroupLayout(createFieldDialog.getContentPane());
        createFieldDialog.getContentPane().setLayout(createFieldDialogLayout);
        createFieldDialogLayout.setHorizontalGroup(
            createFieldDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createFieldDialogLayout.createSequentialGroup()
                .addGroup(createFieldDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(createFieldDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(createNewFieldButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, createFieldDialogLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(createFieldDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keyCheckBox)
                            .addComponent(booleanChoiceButton)
                            .addComponent(charChoiceButton)
                            .addComponent(doubleChoiceButton)
                            .addComponent(integerChoiceButton)
                            .addGroup(createFieldDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(createFieldDialogLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                    .addComponent(fieldSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(inputNewName, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel2)
                            .addComponent(stringChoiceButton))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        createFieldDialogLayout.setVerticalGroup(
            createFieldDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createFieldDialogLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(inputNewName, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(createFieldDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(integerChoiceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stringChoiceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doubleChoiceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(charChoiceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(booleanChoiceButton)
                .addGap(40, 40, 40)
                .addComponent(keyCheckBox)
                .addGap(18, 18, 18)
                .addComponent(createNewFieldButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        Rename.setText("Renombrar");
        Rename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RenameActionPerformed(evt);
            }
        });
        editField.add(Rename);

        changeDataType.setText("Tipo de Dato");
        changeDataType.setToolTipText("");

        dataTypeEditBG.add(integerEditButton);
        integerEditButton.setText("Entero");
        integerEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                integerEditButtonActionPerformed(evt);
            }
        });
        changeDataType.add(integerEditButton);

        dataTypeEditBG.add(stringEditButton);
        stringEditButton.setText("Cadena");
        stringEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stringEditButtonActionPerformed(evt);
            }
        });
        changeDataType.add(stringEditButton);

        dataTypeEditBG.add(doubleEditButton);
        doubleEditButton.setText("Double");
        doubleEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doubleEditButtonActionPerformed(evt);
            }
        });
        changeDataType.add(doubleEditButton);

        dataTypeEditBG.add(booleanEditButton);
        booleanEditButton.setText("Booleano");
        booleanEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booleanEditButtonActionPerformed(evt);
            }
        });
        changeDataType.add(booleanEditButton);

        dataTypeEditBG.add(charEditButton);
        charEditButton.setText("Carácter");
        charEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charEditButtonActionPerformed(evt);
            }
        });
        changeDataType.add(charEditButton);

        editField.add(changeDataType);

        isKeyEditButton.setSelected(true);
        isKeyEditButton.setText("Es llave?");
        isKeyEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isKeyEditButtonActionPerformed(evt);
            }
        });
        editField.add(isKeyEditButton);

        setSize.setText("Tamaño");
        setSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSizeActionPerformed(evt);
            }
        });
        editField.add(setSize);

        Delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete.setText("Eliminar");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        editField.add(Delete);

        treeDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        treeDialog.setTitle("Arbol");

        TreeTextArea.setColumns(20);
        TreeTextArea.setRows(5);
        jScrollPane7.setViewportView(TreeTextArea);

        javax.swing.GroupLayout treeDialogLayout = new javax.swing.GroupLayout(treeDialog.getContentPane());
        treeDialog.getContentPane().setLayout(treeDialogLayout);
        treeDialogLayout.setHorizontalGroup(
            treeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treeDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                .addContainerGap())
        );
        treeDialogLayout.setVerticalGroup(
            treeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treeDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registros");
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setName("Main"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 768));

        emptyPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        openFileButton.setFont(new java.awt.Font("Keep Calm Med", 1, 18)); // NOI18N
        openFileButton.setText("Abrir Archivo");
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileButtonActionPerformed(evt);
            }
        });

        saveFileButton.setFont(new java.awt.Font("Keep Calm Med", 1, 18)); // NOI18N
        saveFileButton.setText("Guardar Archivo");
        saveFileButton.setEnabled(false);
        saveFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileButtonActionPerformed(evt);
            }
        });

        newFileButton.setFont(new java.awt.Font("Keep Calm Med", 1, 18)); // NOI18N
        newFileButton.setText("Nuevo Archivo");
        newFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileButtonActionPerformed(evt);
            }
        });

        exitButton.setFont(new java.awt.Font("Keep Calm Med", 1, 18)); // NOI18N
        exitButton.setForeground(new java.awt.Color(255, 0, 51));
        exitButton.setText("Salir");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        closeFileButton.setFont(new java.awt.Font("Keep Calm Med", 1, 18)); // NOI18N
        closeFileButton.setText("Cerrar Archivo");
        closeFileButton.setEnabled(false);
        closeFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fileTabLayout = new javax.swing.GroupLayout(fileTab);
        fileTab.setLayout(fileTabLayout);
        fileTabLayout.setHorizontalGroup(
            fileTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileTabLayout.createSequentialGroup()
                .addGap(356, 356, 356)
                .addGroup(fileTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(closeFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        fileTabLayout.setVerticalGroup(
            fileTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileTabLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(newFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(openFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(saveFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(fileTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fileTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(fileTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(closeFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(64, Short.MAX_VALUE))))
        );

        emptyPane.addTab("Archivo", null, fileTab, "");

        createFieldButton.setFont(new java.awt.Font("Keep Calm Med", 0, 18)); // NOI18N
        createFieldButton.setText("Crear Campo");
        createFieldButton.setEnabled(false);
        createFieldButton.setMaximumSize(new java.awt.Dimension(175, 175));
        createFieldButton.setMinimumSize(new java.awt.Dimension(175, 175));
        createFieldButton.setPreferredSize(new java.awt.Dimension(175, 175));
        createFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFieldButtonActionPerformed(evt);
            }
        });

        fieldsTable.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        fieldsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        fieldsTable.setColumnSelectionAllowed(true);
        fieldsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fieldsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fieldsTable);
        fieldsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout fieldsTabLayout = new javax.swing.GroupLayout(fieldsTab);
        fieldsTab.setLayout(fieldsTabLayout);
        fieldsTabLayout.setHorizontalGroup(
            fieldsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldsTabLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(fieldsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fieldsTabLayout.createSequentialGroup()
                        .addComponent(createFieldButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1007, Short.MAX_VALUE))
                .addContainerGap())
        );
        fieldsTabLayout.setVerticalGroup(
            fieldsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldsTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createFieldButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        emptyPane.addTab("Campos", fieldsTab);

        registryTable.setFont(new java.awt.Font("Keep Calm Med", 0, 12)); // NOI18N
        registryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        registryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registryTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(registryTable);
        registryTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        createRegistry.setFont(new java.awt.Font("Keep Calm Med", 0, 18)); // NOI18N
        createRegistry.setText("Crear Registro");
        createRegistry.setMaximumSize(new java.awt.Dimension(175, 175));
        createRegistry.setMinimumSize(new java.awt.Dimension(175, 175));
        createRegistry.setPreferredSize(new java.awt.Dimension(175, 175));
        createRegistry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRegistryActionPerformed(evt);
            }
        });

        createRegistry1.setFont(new java.awt.Font("Keep Calm Med", 0, 18)); // NOI18N
        createRegistry1.setText("Eliminar Registro");
        createRegistry1.setMaximumSize(new java.awt.Dimension(175, 175));
        createRegistry1.setMinimumSize(new java.awt.Dimension(175, 175));
        createRegistry1.setPreferredSize(new java.awt.Dimension(175, 175));
        createRegistry1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRegistry1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Buscar:");

        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });
        textField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textField1KeyTyped(evt);
            }
        });

        createRegistry2.setFont(new java.awt.Font("Keep Calm Med", 0, 18)); // NOI18N
        createRegistry2.setText("Guardar Registros");
        createRegistry2.setMaximumSize(new java.awt.Dimension(175, 175));
        createRegistry2.setMinimumSize(new java.awt.Dimension(175, 175));
        createRegistry2.setPreferredSize(new java.awt.Dimension(175, 175));

        javax.swing.GroupLayout registriesTabLayout = new javax.swing.GroupLayout(registriesTab);
        registriesTab.setLayout(registriesTabLayout);
        registriesTabLayout.setHorizontalGroup(
            registriesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registriesTabLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(registriesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registriesTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(registriesTabLayout.createSequentialGroup()
                        .addComponent(createRegistry, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createRegistry1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createRegistry2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(registriesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(205, 205, 205))))
        );
        registriesTabLayout.setVerticalGroup(
            registriesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registriesTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(registriesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registriesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(createRegistry, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(createRegistry1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(createRegistry2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(registriesTabLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        emptyPane.addTab("Registros", registriesTab);

        jButton1.setText("ARBOL");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout indexesTabLayout = new javax.swing.GroupLayout(indexesTab);
        indexesTab.setLayout(indexesTabLayout);
        indexesTabLayout.setHorizontalGroup(
            indexesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, indexesTabLayout.createSequentialGroup()
                .addContainerGap(756, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        indexesTabLayout.setVerticalGroup(
            indexesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, indexesTabLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(503, Short.MAX_VALUE))
        );

        emptyPane.addTab("Índices", indexesTab);

        exportToCSV.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        exportToCSV.setText("Exportar a CSV");
        exportToCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportToCSVActionPerformed(evt);
            }
        });

        exportToXML.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        exportToXML.setText("Exportar a XML");
        exportToXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportToXMLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout exportTabLayout = new javax.swing.GroupLayout(exportTab);
        exportTab.setLayout(exportTabLayout);
        exportTabLayout.setHorizontalGroup(
            exportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportTabLayout.createSequentialGroup()
                .addGap(347, 347, 347)
                .addGroup(exportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exportToXML, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportToCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(378, Short.MAX_VALUE))
        );
        exportTabLayout.setVerticalGroup(
            exportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportTabLayout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(exportToCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(exportToXML, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
        );

        emptyPane.addTab("Exportar", exportTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(emptyPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(emptyPane)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void createFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFieldButtonActionPerformed
        
        createFieldDialog.pack();
        createFieldDialog.setLocationRelativeTo(this);
        createFieldDialog.setVisible(true);
        
    }//GEN-LAST:event_createFieldButtonActionPerformed

    private void RenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RenameActionPerformed
        processEditField(1);
    }//GEN-LAST:event_RenameActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        processEditField(3);
    }//GEN-LAST:event_DeleteActionPerformed

    private void createNewFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewFieldButtonActionPerformed
        
        String tempFieldName = inputNewName.getText();
        String dataType = dataTypeBG.getSelection().getActionCommand();
        boolean isKey = keyCheckBox.isSelected();
        int dataSize = (int) fieldSizeSpinner.getValue();
        
        try{
            
            file.getData().addCampo(new Campo(tempFieldName, dataType, isKey, dataSize));
            updateFieldTable();
            updateRegistryTable();
        
            inputNewName.setText("");
            dataTypeBG.clearSelection();
            keyCheckBox.setSelected(false);
            fieldSizeSpinner.setValue(1);

            createFieldDialog.dispose();
            
        }
        catch(Exception e){
            
        }
        
    }//GEN-LAST:event_createNewFieldButtonActionPerformed

    private void fieldsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldsTableMouseClicked
        if(evt.isMetaDown()){
            
            if (fieldsTable.getSelectedRow() >= 0) {
                editField.show(evt.getComponent(), evt.getX(), evt.getY());
                
                isKeyEditButton.setSelected(file.getData().getFields().get(fieldsTable.getSelectedRow()).isMainKey());
                dataTypeEditBG.clearSelection();
                
            }
            
        }
    }//GEN-LAST:event_fieldsTableMouseClicked

    private void registryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registryTableMouseClicked
        
    }//GEN-LAST:event_registryTableMouseClicked

    private void saveFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileButtonActionPerformed
        if(file.isOpened()){
            file.writeToFile(file.metadata());
            file.setSaved(true);
        }
    }//GEN-LAST:event_saveFileButtonActionPerformed

    private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed
        
        JFileChooser jFc = new JFileChooser("./Files/");
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de Texto", "txt");
        jFc.setFileFilter(filtro);
        File selectedFile;

        int option = jFc.showOpenDialog(this);
        
        if(option == JFileChooser.APPROVE_OPTION){
            selectedFile = jFc.getSelectedFile();
            System.out.println(selectedFile.getAbsolutePath());
            file.setFile(selectedFile);
            file.readMetadata();
            file.setOpened(true);
            file.setSaved(false);
            updateFieldTable();
            
            saveFileButton.setEnabled(true);
            closeFileButton.setEnabled(true);
            createFieldButton.setEnabled(true);
        }
        
    }//GEN-LAST:event_openFileButtonActionPerformed

    private void newFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileButtonActionPerformed
        
        JFileChooser jFc = new JFileChooser("./Files/");
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de Texto", "txt");
        jFc.setFileFilter(filtro);

        int option = jFc.showSaveDialog(this);
        
        if(option == JFileChooser.APPROVE_OPTION){
            
            try{
                
                if (jFc.getFileFilter().getDescription().equals("Archivos de Texto")) {
                    file.createFile(jFc.getSelectedFile().getPath()+".txt", jFc.getSelectedFile().getName());
                    file.setOpened(true);
                    file.setSaved(false);
                    
                    saveFileButton.setEnabled(true);
                    closeFileButton.setEnabled(true);
                    createFieldButton.setEnabled(true);
                    
                    updateFieldTable();
                }
                
            }
            catch(Exception e){
            }
            
        }
        
    }//GEN-LAST:event_newFileButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        
        if(!file.isSaved() && file.getFile() != null){
            JOptionPane.showMessageDialog(this, "No has guardado!", "Confirmación", JOptionPane.WARNING_MESSAGE);
        }
        else{
            dispose();
        } 
        
    }//GEN-LAST:event_exitButtonActionPerformed

    private void closeFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFileButtonActionPerformed
        
        if(!file.isSaved() && file.getFile() != null){
            JOptionPane.showMessageDialog(this, "No has guardado!", "Confirmación", JOptionPane.WARNING_MESSAGE);
        }
        else{
            this.file = new Archivo();
            this.file.setFile(null);
            updateFieldTable();
            saveFileButton.setEnabled(false);
            closeFileButton.setEnabled(false);
        }
        
    }//GEN-LAST:event_closeFileButtonActionPerformed

    private void integerEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_integerEditButtonActionPerformed
        processEditField(integerEditButton.getActionCommand());
    }//GEN-LAST:event_integerEditButtonActionPerformed

    private void stringEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stringEditButtonActionPerformed
        processEditField(stringEditButton.getActionCommand());
    }//GEN-LAST:event_stringEditButtonActionPerformed

    private void doubleEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doubleEditButtonActionPerformed
        processEditField(doubleEditButton.getActionCommand());
    }//GEN-LAST:event_doubleEditButtonActionPerformed

    private void booleanEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booleanEditButtonActionPerformed
        processEditField(booleanEditButton.getActionCommand());
    }//GEN-LAST:event_booleanEditButtonActionPerformed

    private void charEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charEditButtonActionPerformed
        processEditField(charEditButton.getActionCommand());
    }//GEN-LAST:event_charEditButtonActionPerformed

    private void setSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSizeActionPerformed
        processEditField(2);
    }//GEN-LAST:event_setSizeActionPerformed

    private void isKeyEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isKeyEditButtonActionPerformed
        file.getData().getFields().get(fieldsTable.getSelectedRow()).setMainKey(isKeyEditButton.isSelected());
    }//GEN-LAST:event_isKeyEditButtonActionPerformed

    private void createRegistryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRegistryActionPerformed
   
    }//GEN-LAST:event_createRegistryActionPerformed

    private void inputNewNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNewNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNewNameActionPerformed

    private void createRegistry1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRegistry1ActionPerformed
   
    }//GEN-LAST:event_createRegistry1ActionPerformed

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1ActionPerformed

    private void textField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField1KeyTyped
        
    }//GEN-LAST:event_textField1KeyTyped

    private void textField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1KeyReleased

    private void loadTree(){
    
    }
    
    private void exportToCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportToCSVActionPerformed
   
    }//GEN-LAST:event_exportToCSVActionPerformed

    private void exportToXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportToXMLActionPerformed

    }//GEN-LAST:event_exportToXMLActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadTree();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void updateFieldTable(){
        
        DefaultTableModel tableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
               return false;
            }
        };
        
        Object[] identificadores = new Object[]{"Nombre del Campo", "Tipo de Dato", "Es Llave?", "Tamaño del Campo"};
        
        tableModel.setColumnIdentifiers(identificadores);
        JTableHeader jTH = fieldsTable.getTableHeader();
        jTH.setFont(new Font("Keep Calm Med", Font.BOLD, 14));
        
        file.getData().getFields().forEach((campo) -> {
            tableModel.addRow(new Object[]{
                campo.getFieldName(), campo.getDataType(), campo.isMainKey(), campo.getFieldSize()
            });
        });
        
        fieldsTable.setModel(tableModel);
        
    }
    
    private void updateRegistryTable(){
        
        DefaultTableModel tableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
               return false;
            }
        };
        
        ArrayList<String> fieldNamesList = new ArrayList();
        file.getData().getFields().forEach((campo) -> {
            fieldNamesList.add(campo.getFieldName());
        });
        
        Object[] identificadores = fieldNamesList.toArray();
        
        tableModel.setColumnIdentifiers(identificadores);
        JTableHeader jTH = registryTable.getTableHeader();
        jTH.setFont(new Font("Keep Calm Med", Font.BOLD, 14));
  
        registryTable.setModel(tableModel);
        
    }
    
    private void processEditField(int option){
        switch(option){
            case 1:  
                String newName = JOptionPane.showInputDialog("Nuevo nombre de Campo:");
                file.getData().getFields().get(fieldsTable.getSelectedRow()).setFieldName(newName);
            break;
            case 2:  
                int newSize = Integer.parseInt(JOptionPane.showInputDialog("Nuevo tamaño de Campo:"));
                file.getData().getFields().get(fieldsTable.getSelectedRow()).setFieldSize(newSize);
            break;
            case 3:
                if (JOptionPane.showConfirmDialog(this, "¿Seguro qué desea eliminar este Campo?") == JOptionPane.YES_OPTION) {
                    file.getData().getFields().remove(fieldsTable.getSelectedRow());
                }
            break;
        }
        updateFieldTable();
    }
    
    private void processEditField(String newType){
        file.getData().getFields().get(fieldsTable.getSelectedRow()).setDataType(newType);
        updateFieldTable();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }
    
    private Archivo file;
    private ArrayList forTree;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Delete;
    private javax.swing.JMenuItem Rename;
    private javax.swing.JTextArea TreeTextArea;
    private javax.swing.JRadioButton booleanChoiceButton;
    private javax.swing.JRadioButtonMenuItem booleanEditButton;
    private javax.swing.JMenu changeDataType;
    private javax.swing.JRadioButton charChoiceButton;
    private javax.swing.JRadioButtonMenuItem charEditButton;
    private javax.swing.JButton closeFileButton;
    private javax.swing.JButton createFieldButton;
    private javax.swing.JDialog createFieldDialog;
    private javax.swing.JButton createNewFieldButton;
    private javax.swing.JButton createRegistry;
    private javax.swing.JButton createRegistry1;
    private javax.swing.JButton createRegistry2;
    private javax.swing.ButtonGroup dataTypeBG;
    private javax.swing.ButtonGroup dataTypeEditBG;
    private javax.swing.JRadioButton doubleChoiceButton;
    private javax.swing.JRadioButtonMenuItem doubleEditButton;
    private javax.swing.JPopupMenu editField;
    private javax.swing.JTabbedPane emptyPane;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel exportTab;
    private javax.swing.JButton exportToCSV;
    private javax.swing.JButton exportToXML;
    private javax.swing.JSpinner fieldSizeSpinner;
    private javax.swing.JPanel fieldsTab;
    private javax.swing.JTable fieldsTable;
    private javax.swing.JPanel fileTab;
    private javax.swing.JPanel indexesTab;
    private javax.swing.JTextField inputNewName;
    private javax.swing.JRadioButton integerChoiceButton;
    private javax.swing.JRadioButtonMenuItem integerEditButton;
    private javax.swing.JCheckBoxMenuItem isKeyEditButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JCheckBox keyCheckBox;
    private javax.swing.JButton newFileButton;
    private javax.swing.JButton openFileButton;
    private javax.swing.JPanel registriesTab;
    private javax.swing.JTable registryTable;
    private javax.swing.JButton saveFileButton;
    private javax.swing.JMenuItem setSize;
    private javax.swing.JRadioButton stringChoiceButton;
    private javax.swing.JRadioButtonMenuItem stringEditButton;
    private java.awt.TextField textField1;
    private javax.swing.JDialog treeDialog;
    // End of variables declaration//GEN-END:variables
}
